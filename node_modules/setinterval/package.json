{
  "_from": "setinterval",
  "_id": "setinterval@0.2.0",
  "_inBundle": false,
  "_integrity": "sha512-Ck9JjKpjrmPzUlzJYCFzE2HjL68IFV74YhKyO704NpS/icsw8wMPtR8uHy/isGY5i/V+vlK5fxgG0dM+Wmp19A==",
  "_location": "/setinterval",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "setinterval",
    "fetchSpec": "latest",
    "name": "setinterval",
    "raw": "setinterval",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/setinterval/-/setinterval-0.2.0.tgz",
  "_shasum": "98d494dd5f9ee1488a01e9d0e005c7bddc70fff9",
  "_spec": "setinterval",
  "_where": "/home/swpp/workspace/nodejs-server-practice",
  "author": {
    "email": "drqzju@gmail.com",
    "name": "luckydrq"
  },
  "bugs": {
    "url": "https://github.com/luckydrq/setinterval/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "co": "^4.6.0",
    "is-type-of": "^1.0.0"
  },
  "deprecated": false,
  "description": "[![NPM version][npm-image]][npm-url] [![npm download][download-image]][download-url]",
  "devDependencies": {
    "eslint": "^3.12.2",
    "eslint-config-egg": "^3.2.0",
    "istanbul": "^0.4.5",
    "mocha": "^3.2.0"
  },
  "homepage": "https://github.com/luckydrq/setinterval#readme",
  "keywords": [
    "async",
    "setInterval",
    "task"
  ],
  "name": "setinterval",
  "optionalDependencies": {},
  "readme": "# setinterval\n\n[![NPM version][npm-image]][npm-url]\n[![npm download][download-image]][download-url]\n\n[npm-image]: https://img.shields.io/npm/v/setinterval.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/setinterval\n[download-image]: https://img.shields.io/npm/dm/setinterval.svg?style=flat-square\n[download-url]: https://npmjs.org/package/setinterval\n\nMore reasonable setInterval for async task.\n\n## Install\n`$ npm i setinterval`\n\n## Example\n```js\n  const Timer = require('setinterval');\n  const t = new Timer(function*() {\n    const user = yield db.User.get(id);\n    console.log(user);\n  }, 1000);\n\n  // start timer\n  t.setInterval();\n\n  // xxxx\n  t.clearInterval();\n```\n\n## API\n\n- setInterval(fn, period)\n\nfn should be a Promise, a generator function or a thunk.\n\n- clearInterval()\n\ncancel timer.\n\n## Events\n\n- tick\n\nTriggered each time fn is finished, whenever a error is thrown. You can cancel the timer in this event. A `count` parameter is passed in the event handler which stands for how many times fn has been called.\n\n```js\ntimer.on('tick', count => {\n  timer.clearInterval();\n});\n```\n\n- error\n\nTriggered when error thrown from fn.\n\n```js\ntimer.on('error', e => {\n  logger.info(e.stack);\n});\n```\n\n## License\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/luckydrq/setinterval.git"
  },
  "scripts": {
    "cov": "istanbul cover _mocha -- -t 3000 test/*.test.js",
    "lint": "eslint index.js test --ext .js --fix",
    "test": "mocha -t 3000 test/*.test.js"
  },
  "version": "0.2.0"
}
